/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ForestRouteImport } from './routes/forest'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TasksIndexRouteImport } from './routes/tasks/index'
import { Route as ShopIndexRouteImport } from './routes/shop/index'
import { Route as TasksIdRouteImport } from './routes/tasks/$id'
import { Route as ProfileIdRouteImport } from './routes/profile/$id'
import { Route as CampaignIdRouteImport } from './routes/campaign/$id'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ForestRoute = ForestRouteImport.update({
  id: '/forest',
  path: '/forest',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksIndexRoute = TasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => rootRouteImport,
} as any)
const ShopIndexRoute = ShopIndexRouteImport.update({
  id: '/shop/',
  path: '/shop/',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksIdRoute = TasksIdRouteImport.update({
  id: '/tasks/$id',
  path: '/tasks/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileIdRoute = ProfileIdRouteImport.update({
  id: '/profile/$id',
  path: '/profile/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const CampaignIdRoute = CampaignIdRouteImport.update({
  id: '/campaign/$id',
  path: '/campaign/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/forest': typeof ForestRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/campaign/$id': typeof CampaignIdRoute
  '/profile/$id': typeof ProfileIdRoute
  '/tasks/$id': typeof TasksIdRoute
  '/shop': typeof ShopIndexRoute
  '/tasks': typeof TasksIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/forest': typeof ForestRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/campaign/$id': typeof CampaignIdRoute
  '/profile/$id': typeof ProfileIdRoute
  '/tasks/$id': typeof TasksIdRoute
  '/shop': typeof ShopIndexRoute
  '/tasks': typeof TasksIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/forest': typeof ForestRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/campaign/$id': typeof CampaignIdRoute
  '/profile/$id': typeof ProfileIdRoute
  '/tasks/$id': typeof TasksIdRoute
  '/shop/': typeof ShopIndexRoute
  '/tasks/': typeof TasksIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/forest'
    | '/login'
    | '/signup'
    | '/campaign/$id'
    | '/profile/$id'
    | '/tasks/$id'
    | '/shop'
    | '/tasks'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forest'
    | '/login'
    | '/signup'
    | '/campaign/$id'
    | '/profile/$id'
    | '/tasks/$id'
    | '/shop'
    | '/tasks'
  id:
    | '__root__'
    | '/'
    | '/forest'
    | '/login'
    | '/signup'
    | '/campaign/$id'
    | '/profile/$id'
    | '/tasks/$id'
    | '/shop/'
    | '/tasks/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ForestRoute: typeof ForestRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  CampaignIdRoute: typeof CampaignIdRoute
  ProfileIdRoute: typeof ProfileIdRoute
  TasksIdRoute: typeof TasksIdRoute
  ShopIndexRoute: typeof ShopIndexRoute
  TasksIndexRoute: typeof TasksIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forest': {
      id: '/forest'
      path: '/forest'
      fullPath: '/forest'
      preLoaderRoute: typeof ForestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/': {
      id: '/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shop/': {
      id: '/shop/'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof ShopIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/$id': {
      id: '/tasks/$id'
      path: '/tasks/$id'
      fullPath: '/tasks/$id'
      preLoaderRoute: typeof TasksIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/$id': {
      id: '/profile/$id'
      path: '/profile/$id'
      fullPath: '/profile/$id'
      preLoaderRoute: typeof ProfileIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/campaign/$id': {
      id: '/campaign/$id'
      path: '/campaign/$id'
      fullPath: '/campaign/$id'
      preLoaderRoute: typeof CampaignIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ForestRoute: ForestRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  CampaignIdRoute: CampaignIdRoute,
  ProfileIdRoute: ProfileIdRoute,
  TasksIdRoute: TasksIdRoute,
  ShopIndexRoute: ShopIndexRoute,
  TasksIndexRoute: TasksIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
